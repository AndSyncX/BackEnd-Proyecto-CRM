package com.j_d_solutions.crm.task;

import com.j_d_solutions.crm.client.ClientRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
@RequiredArgsConstructor
public class TaskService {
    private final TaskRepository taskRepository;
    private final ClientRepository clientRepository;

    public List<Task> getTasks() {
        return taskRepository.findAll();
    }

    public Task getTaskById(int id) {
        return taskRepository.findById(id).orElse(null);
    }

    public TaskDto getTaskDtoById(int id) {
        Task task = getTaskById(id);
        TaskDto taskDto = new TaskDto();
        taskDto.setIdtask(task.getIdtask());
        taskDto.setTitle(task.getTitle());
        taskDto.setIdclient(task.getClient().getIdclient());
        taskDto.setType(task.getType());
        taskDto.setDue_date(task.getDue_date());
        taskDto.setNotes(task.getNotes());
        return taskDto;
    }

    public void saveTask(TaskDto taskDto) {
        if (taskDto.getIdtask() != null ){
            taskRepository.updateParcialTask(
                    taskDto.getIdclient(),
                    taskDto.getType(),
                    taskDto.getDue_date(),
                    taskDto.getNotes(),
                    taskDto.getIdtask()
            );
        } else {
            Task task = new Task();
            task.setTitle(taskDto.getTitle());
            task.setClient(clientRepository.findById(taskDto.getIdclient()).orElse(null));
            task.setType(taskDto.getType());
            task.setDue_date(taskDto.getDue_date());
            task.setNotes(taskDto.getNotes());
            taskRepository.save(task);
        }
    }
}
